{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\zenit\\\\Desktop\\\\react-tutorial\\\\src\\\\Api.js\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: []\n    };\n  }\n\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n    const url = 'https://reqres.in/api/users/';\n    fetch(url).then(result => result.json()).then(result => {\n      this.setState({\n        users: result\n      });\n    });\n  }\n\n  render() {\n    let itemsToRender;\n    const {\n      users\n    } = this.state;\n\n    if (users.data) {\n      itemsToRender = users.data.map(user => {\n        console.log(user.id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: users.id\n        }, users.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this);\n      });\n    } else {\n      itemsToRender = \"Loading...\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: itemsToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this); //return <div><pre>{JSON.stringify(this.state.users, null, 2) }</pre></div>;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/zenit/Desktop/react-tutorial/src/Api.js"],"names":["React","Component","App","state","users","componentDidMount","url","fetch","then","result","json","setState","render","itemsToRender","data","map","user","console","log","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE;AADD,KADkB;AAAA;;AAK1B;AACAC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GACP,8BADF;AAGAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,MAAD,IAAYA,MAAM,CAACC,IAAP,EADpB,EAEGF,IAFH,CAESC,MAAD,IAAY;AAChB,WAAKE,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAEK;AADK,OAAd;AAID,KAPH;AAQD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAIC,aAAJ;AACA,UAAM;AAACT,MAAAA;AAAD,QAAU,KAAKD,KAArB;;AACA,QAAIC,KAAK,CAACU,IAAV,EAAgB;AAChBD,MAAAA,aAAa,GAAGT,KAAK,CAACU,IAAN,CAAWC,GAAX,CAAeC,IAAI,IAAI;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,EAAjB;AACA,4BAAO;AAAA,oBAAqBf,KAAK,CAACe;AAA3B,WAAUf,KAAK,CAACe,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAHe,CAAhB;AAID,KALC,MAKK;AACLN,MAAAA,aAAa,GAAG,YAAhB;AACD;;AAED,wBAAO;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP,CAZS,CAaP;AACD;;AAlCyB;;AAqC5B,eAAeX,GAAf","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    users: [],\r\n  }\r\n\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    const url =\r\n      'https://reqres.in/api/users/'\r\n\r\n    fetch(url)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          users: result,\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let itemsToRender;\r\n    const {users} = this.state\r\n    if (users.data) {\r\n    itemsToRender = users.data.map(user => {\r\n      console.log(user.id)\r\n      return <div key={users.id}>{users.id}</div>;\r\n    });\r\n  } else {\r\n    itemsToRender = \"Loading...\";\r\n  }\r\n\r\n  return <div>{itemsToRender}</div>;\r\n    //return <div><pre>{JSON.stringify(this.state.users, null, 2) }</pre></div>;\r\n  }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}